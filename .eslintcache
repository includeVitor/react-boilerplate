[{"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\store\\index.ts":"1","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\services\\index.ts":"2","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\services\\authService\\index.ts":"3","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\index.tsx":"4","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\route\\CheckAuthentication.ts":"5","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\services\\apiService.ts":"6","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\route\\index.tsx":"7","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\store\\modules\\auth\\index.ts":"8","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\store\\modules\\ui\\index.ts":"9","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\store\\modules\\notify\\index.ts":"10","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\route\\CONSTANTS.tsx":"11","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Forgot.tsx":"12","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\route\\PrivateRoute\\index.tsx":"13","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\route\\PublicRoute\\index.tsx":"14","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Main\\index.tsx":"15","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Main\\listItems\\index.tsx":"16","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Main\\listItems\\mainList.tsx":"17","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\components\\SmartDataPaper\\styles.ts":"18","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\components\\SmartDataPaper\\index.tsx":"19","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Signup\\index.tsx":"20","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Login\\index.tsx":"21","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\App.tsx":"22","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Login\\styles.ts":"23"},{"size":496,"mtime":1608056068524,"results":"24","hashOfConfig":"25"},{"size":75,"mtime":1608056960197,"results":"26","hashOfConfig":"25"},{"size":3829,"mtime":1608057009281,"results":"27","hashOfConfig":"25"},{"size":291,"mtime":1608032489144,"results":"28","hashOfConfig":"25"},{"size":573,"mtime":1608056187707,"results":"29","hashOfConfig":"25"},{"size":145,"mtime":1608056139798,"results":"30","hashOfConfig":"25"},{"size":945,"mtime":1608068298881,"results":"31","hashOfConfig":"25"},{"size":989,"mtime":1608063649186,"results":"32","hashOfConfig":"25"},{"size":1529,"mtime":1608055954196,"results":"33","hashOfConfig":"25"},{"size":2078,"mtime":1608055855036,"results":"34","hashOfConfig":"25"},{"size":196,"mtime":1608032489152,"results":"35","hashOfConfig":"25"},{"size":4112,"mtime":1608032489146,"results":"36","hashOfConfig":"25"},{"size":638,"mtime":1608032489154,"results":"37","hashOfConfig":"25"},{"size":635,"mtime":1608032489155,"results":"38","hashOfConfig":"25"},{"size":5875,"mtime":1608032489148,"results":"39","hashOfConfig":"25"},{"size":60,"mtime":1608032489149,"results":"40","hashOfConfig":"25"},{"size":389,"mtime":1608032489150,"results":"41","hashOfConfig":"25"},{"size":702,"mtime":1608068421023,"results":"42","hashOfConfig":"25"},{"size":397,"mtime":1608068421892,"results":"43","hashOfConfig":"25"},{"size":7852,"mtime":1608069085128,"results":"44","hashOfConfig":"25"},{"size":6675,"mtime":1608122951696,"results":"45","hashOfConfig":"25"},{"size":497,"mtime":1608032489142,"results":"46","hashOfConfig":"25"},{"size":845,"mtime":1608122863559,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1n8xg4t",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\store\\index.ts",[],["99","100"],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\services\\index.ts",[],["101","102"],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\services\\authService\\index.ts",[],["103","104"],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\index.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\route\\CheckAuthentication.ts",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\services\\apiService.ts",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\route\\index.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\store\\modules\\auth\\index.ts",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\store\\modules\\ui\\index.ts",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\store\\modules\\notify\\index.ts",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\route\\CONSTANTS.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Forgot.tsx",["105","106"],"import React, { useState } from \"react\"\r\nimport { Grid, Typography, TextField, Button, Link } from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {LOGIN} from \"../route/CONSTANTS\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Forgot, UserRequestError } from \"../types\"\r\nimport { authService } from \"../services\"\r\n\r\nconst ForgetPage: React.FC = () => {\r\n    \r\n    const history = useHistory()\r\n\r\n\r\n    const [email, setEmail] = useState()\r\n    const [errors, setErrors] = useState({} as UserRequestError)\r\n\r\n    const handleRedirectLogin = (e : any) => {\r\n        e.preventDefault()\r\n        history.push(LOGIN)\r\n    }\r\n\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault()\r\n        const form = e.target\r\n        const formData = new FormData(form)\r\n        const errorMessages = Array.from(formData.keys()).reduce((acc: any, key: any) => {\r\n            acc[key] = form.elements[key].validationMessage\r\n            return acc\r\n        },{})\r\n\r\n        setErrors(errorMessages)\r\n\r\n        //forgot action\r\n        \r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        const input = e.target\r\n        setEmail(input.value)\r\n        setErrors({...errors, [input.name] : input.validationMessage})\r\n    }\r\n\r\n    const hasError = (field: string) => !!errors[field]\r\n\r\n    const getError = (field: string) => errors[field]   \r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n\r\n        main:{\r\n            display:'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            flex: '1 1 0%',\r\n            width: '100%',\r\n            maxWidth: 450,\r\n            padding:32,\r\n            justifyContent: 'center'\r\n        },\r\n        title:{\r\n            textAlign: 'center',\r\n            fontWeight: 'bold',\r\n            marginBottom: 20\r\n        },\r\n        forgotButton: {\r\n            marginTop: 8\r\n        },\r\n        backLink:{\r\n            marginTop: 12,\r\n            textAlign: 'center'\r\n        }\r\n\r\n    }))\r\n    \r\n    const classes = useStyles()\r\n\r\n    return (  \r\n\r\n        <Grid className={classes.main}>\r\n\r\n            <form noValidate onSubmit={handleSubmit}>\r\n                <Grid container>    \r\n                    <Grid item lg={12}>\r\n                        <Typography variant=\"h5\" className={classes.title}>\r\n                            Recuperar senha\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item lg={12}>\r\n                        <TextField\r\n                            type=\"email\"\r\n                            value={email}\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            margin=\"normal\"\r\n                            label=\"Digite seu e-mail\" \r\n                            variant=\"outlined\"\r\n                            autoComplete=\"email\"\r\n                            helperText={getError('email')}\r\n                            error={hasError('email')}\r\n                            autoFocus\r\n                            fullWidth\r\n                            required\r\n                        />  \r\n                    </Grid>\r\n\r\n                    <Grid item lg={12}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"medium\"\r\n                            fullWidth\r\n                            className={classes.forgotButton}\r\n                        >\r\n                            Recuperar\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item lg={12}>\r\n                        <Typography  className={classes.backLink}>\r\n                            <Link href={LOGIN} onClick={handleRedirectLogin}>\r\n                                Voltar\r\n                            </Link>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n \r\nexport default ForgetPage;","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\route\\PrivateRoute\\index.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\route\\PublicRoute\\index.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Main\\index.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Main\\listItems\\index.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Main\\listItems\\mainList.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\components\\SmartDataPaper\\styles.ts",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\components\\SmartDataPaper\\index.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Signup\\index.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Login\\index.tsx",["107"],"import React, { useState } from \"react\"\r\nimport { authService } from \"../../services\"\r\nimport { UserRequest, UserRequestError } from \"../../types\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Link from '@material-ui/core/Link'\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp'\r\nimport {FORGOT, SIGNUP} from \"../../route/CONSTANTS\"\r\n\r\n//SmartData Components\r\nimport SmartDataPaper from '../../components/SmartDataPaper'\r\n\r\n//StyledComponents\r\nimport { Container, Content, GridForgot, GridRegister, GridSubmit } from './styles'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst LoginPage: React.FC = (props : any) => { \r\n    \r\n    const history =  useHistory()\r\n    \r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    } as UserRequest)\r\n \r\n    const [errors, setErrors] = useState({} as UserRequestError)\r\n\r\n    const hasError = (field: string) => !!errors[field]\r\n\r\n    const getError = (field: string) => errors[field]   \r\n\r\n    function ableToSubmit (value : any) {\r\n\r\n        if('email' in errors || 'password' in errors )\r\n            return !(errors.email === \"\" && errors.password === \"\" && values.email !== \"\" && values.password !== \"\")\r\n        else\r\n            return true\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        const input = e.target\r\n        setValues(values => ({\r\n            ...values,\r\n            [input.name]: input.value\r\n        }));\r\n        setErrors({ ...errors, [input.name]: input.validationMessage})\r\n    }\r\n\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        // client side validation\r\n        const form = e.target\r\n        const formData = new FormData(form)\r\n        const errorMessages = Array.from(formData.keys()).reduce((acc: any, key: any) => {\r\n            acc[key] = form.elements[key].validationMessage\r\n            return acc\r\n        },{})\r\n\r\n        setErrors(errorMessages)\r\n\r\n        const userData : UserRequest ={\r\n            email: values.email,\r\n            password: values.password\r\n        }\r\n        \r\n        //authentication\r\n        authService.loginUser(userData, history)    \r\n    }\r\n\r\n    const handleRedirectForgot = (e :any) => {\r\n        e.preventDefault()\r\n        history.push(FORGOT)\r\n    }\r\n\r\n    const handleRedirectRegister = (e: any) => {\r\n        e.preventDefault()\r\n        history.push(SIGNUP)\r\n    }\r\n    \r\n    return (        \r\n\r\n            <Container>\r\n\r\n                <Content>\r\n                        \r\n                    <SmartDataPaper>\r\n\r\n                        <TouchAppIcon style={{ fontSize: 75, marginBottom: 10 }}/>\r\n\r\n                        <Typography variant=\"h4\">\r\n                            Entre na plataforma\r\n                        </Typography>\r\n                \r\n                    </SmartDataPaper>\r\n\r\n                    <SmartDataPaper padding={68} border={true} background={true} >\r\n                        <form  noValidate onSubmit={handleSubmit}> \r\n\r\n                            <Grid container>\r\n                                \r\n                                <Grid item lg={12}>\r\n                                    <TextField\r\n                                        type=\"email\"\r\n                                        value={values.email}\r\n                                        name=\"email\"\r\n                                        onChange={handleChange}\r\n                                        margin=\"normal\"\r\n                                        label=\"E-mail\" \r\n                                        variant=\"outlined\"\r\n                                        autoComplete=\"email\"\r\n                                        helperText={getError('email')}\r\n                                        error={hasError('email')}\r\n                                        autoFocus\r\n                                        fullWidth\r\n                                        required\r\n                                    />  \r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={12}>\r\n                                    <TextField\r\n                                        type=\"password\"\r\n                                        value={values.password}\r\n                                        name=\"password\"\r\n                                        onChange={handleChange}\r\n                                        label=\"Senha\" \r\n                                        variant=\"outlined\"\r\n                                        helperText={getError('password')}\r\n                                        error={hasError('password')}\r\n                                        required\r\n                                        fullWidth\r\n                                    />  \r\n                                </Grid>\r\n\r\n                                <GridForgot item lg={12}>\r\n                                    <Typography>\r\n                                        <Link href={FORGOT} onClick={handleRedirectForgot}>\r\n                                            Esqueci minha senha\r\n                                        </Link>\r\n                                    </Typography>\r\n                                </GridForgot>\r\n\r\n                                <GridRegister item lg={6}>\r\n                                    <Typography>\r\n                                        <Link href={SIGNUP} onClick={handleRedirectRegister}>\r\n                                            Registrar\r\n                                        </Link>\r\n                                    </Typography>\r\n                                </GridRegister>\r\n\r\n                                <GridSubmit item lg={6} >\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"medium\"\r\n                                        disabled={ableToSubmit(errors)}\r\n                                    >\r\n                                        Entrar\r\n                                    </Button>\r\n                                </GridSubmit>\r\n\r\n                            </Grid>\r\n\r\n                        </form>\r\n                    </SmartDataPaper>\r\n                    \r\n                </Content>\r\n\r\n            </Container>\r\n    )\r\n\r\n}\r\n \r\nexport default LoginPage\r\n","P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\App.tsx",[],"P:\\Personal_Or_Old\\react\\reactjs2.0\\src\\pages\\Login\\styles.ts",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"110","replacedBy":"113"},{"ruleId":"108","replacedBy":"114"},{"ruleId":"110","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":7,"column":10,"nodeType":"118","messageId":"119","endLine":7,"endColumn":16},{"ruleId":"116","severity":1,"message":"120","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":21},{"ruleId":"116","severity":1,"message":"121","line":19,"column":10,"nodeType":"118","messageId":"119","endLine":19,"endColumn":20},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],["122"],["123"],"@typescript-eslint/no-unused-vars","'Forgot' is defined but never used.","Identifier","unusedVar","'authService' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]